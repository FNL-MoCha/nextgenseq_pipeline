if 'DNASeq' in config:
	for subject in config['DNASeq']:
		for sample in config['DNASeq'][subject]:
			if config['sample_type'][sample] == 'Tumor':
				if config['sample_captures'][sample] in config['cnvkit_ref']:
					if 'PDC' in sample:
						print()
					elif 'organoid' in sample:
						print()
					else:
						#TARGET    += [subject+"/"+TIME+"/"+sample+"/oncoKB/"+sample+".maf"]
						#TARGET    += [subject+"/"+TIME+"/"+sample+"/oncoKB/"+sample+".cnv"]
						#TARGET    += [subject+"/"+TIME+"/"+sample+"/oncoKB/"+sample+".oncoKB.clinical.txt"]
						TARGET    += [subject+"/"+TIME+"/oncoKB/"+subject+".maf"]
						TARGET    += [subject+"/"+TIME+"/oncoKB/"+subject+".cnv"]
						TARGET    += [subject+"/"+TIME+"/oncoKB/"+subject+".oncoKB.clinical.txt"]
rule oncoKB_MAF_sub:
	input:
		maf="{subject}/{TIME}/{sample}/calls/{sample}.variants.maf",
	output:
		maf="{subject}/{TIME}/{sample}/oncoKB/{sample}.maf",
		clinical="{subject}/{TIME}/{sample}/oncoKB/{sample}.clinical.txt"
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  =  WORK_DIR,
		diagnosis = lambda wildcards: config['diagnosis'][wildcards.subject]
	shell: """
	#######################
	echo -e "SAMPLE_ID\\tONCOTREE_CODE" >{output.clinical}
	echo -e "{wildcards.sample}\\t{params.diagnosis}" >>{output.clinical}
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/MafAnnotator.py -i {input.maf} -o {output.maf} -t {params.diagnosis}'
	#######################
	"""
rule oncoKB_CNV_sub:
	input:
		"{subject}/{TIME}/{sample}/cnvkit/{sample}.cns"
	output:
		cnv="{subject}/{TIME}/{sample}/oncoKB/{sample}.cnv",
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  = WORK_DIR,
		hugo      = config["hugo_list"],
		script    = NGS_PIPELINE+"/scripts/processCNA.pl",
		script2   = NGS_PIPELINE+"/scripts/filterCNA.pl",
		diagnosis = lambda wildcards: config['diagnosis'][wildcards.subject]
	shell: """
	#######################
	perl {params.script} {input} {params.hugo} {wildcards.sample} >{wildcards.subject}/{TIME}/{wildcards.sample}/oncoKB/{wildcards.sample}.tmp.cnv.txt
	paste {params.hugo} {wildcards.subject}/{TIME}/{wildcards.sample}/oncoKB/{wildcards.sample}.tmp.cnv.txt |perl {params.script2} - {wildcards.sample} >{wildcards.subject}/{TIME}/{wildcards.sample}/oncoKB/{wildcards.sample}.cnv.txt
	rm -rf {wildcards.subject}/{TIME}/oncoKB/*.tmp.cnv.txt
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/CnaAnnotator.py -i {wildcards.subject}/{TIME}/{wildcards.sample}/oncoKB/{wildcards.sample}.cnv.txt -o {output.cnv} -t {params.diagnosis}'
       rm -rf {wildcards.subject}/{TIME}/{wildcards.sample}/oncoKB/{wildcards.sample}.cnv.txt
	#######################
	"""
rule oncoKB_Sample:
	input:
		maf="{subject}/{TIME}/{sample}/oncoKB/{sample}.maf",
		clinical="{subject}/{TIME}/{sample}/oncoKB/{sample}.clinical.txt",
		cnv="{subject}/{TIME}/{sample}/oncoKB/{sample}.cnv"
	output:
		clinical="{subject}/{TIME}/{sample}/oncoKB/{sample}.oncoKB.clinical.txt",
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  = WORK_DIR,
	shell: """
	#######################
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/ClinicalDataAnnotator.py -i {input.clinical} -o {output.clinical} -a {input.maf},{input.cnv}'
	#######################
	"""

rule oncoKB_MAF:
	input:
		maf="{subject}/{TIME}/{subject}.consensus.maf",
	output:
		maf="{subject}/{TIME}/oncoKB/{subject}.maf",
		clinical="{subject}/{TIME}/oncoKB/{subject}.clinical.txt"
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  =  WORK_DIR,
		diagnosis = lambda wildcards: config['diagnosis'][wildcards.subject]
	shell: """
	#######################
	echo -e "SAMPLE_ID\\tONCOTREE_CODE" >{output.clinical}
	echo -e "{wildcards.subject}\\t{params.diagnosis}" >>{output.clinical}
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/MafAnnotator.py -i {input.maf} -o {output.maf} -t {params.diagnosis}'
	#######################
	"""

rule oncoKB_CNV:
	input:
		lambda wildcards: subCNV[wildcards.subject]
	output:
		cnv="{subject}/{TIME}/oncoKB/{subject}.cnv",
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  = WORK_DIR,
		hugo      = config["hugo_list"],
		script    = NGS_PIPELINE+"/scripts/processCNA.pl",
		script2   = NGS_PIPELINE+"/scripts/filterCNA.pl",
		diagnosis = lambda wildcards: config['diagnosis'][wildcards.subject]
	shell: """
	#######################
	for file in {input}
	do	
		name=`basename ${{file}} .seg`
		perl {params.script} {wildcards.subject}/{TIME}/${{name}}/cnvkit/${{name}}.cns {params.hugo} ${{name}} >{wildcards.subject}/{TIME}/oncoKB/${{name}}.tmp.cnv.txt
	done
	paste {params.hugo} {wildcards.subject}/{TIME}/oncoKB/*.tmp.cnv.txt |perl {params.script2} - {wildcards.subject} >{wildcards.subject}/{TIME}/oncoKB/{wildcards.subject}.cnv.txt
	rm -rf {wildcards.subject}/{TIME}/oncoKB/*.tmp.cnv.txt
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/CnaAnnotator.py -i {wildcards.subject}/{TIME}/oncoKB/{wildcards.subject}.cnv.txt -o {output.cnv} -t {params.diagnosis}'
	rm -rf {wildcards.subject}/{TIME}/oncoKB/{wildcards.subject}.cnv.txt
	#######################
	"""

rule oncoKB_Summary:
	input:
		maf="{subject}/{TIME}/oncoKB/{subject}.maf",
		clinical="{subject}/{TIME}/oncoKB/{subject}.clinical.txt",
		cnv="{subject}/{TIME}/oncoKB/{subject}.cnv"
	output:
		clinical="{subject}/{TIME}/oncoKB/{subject}.oncoKB.clinical.txt",
	params:
		rulename  = "oncoKB",
		batch     = config[config['host']]["job_default"],
		work_dir  = WORK_DIR,
	shell: """
	#######################
	ssh -q biowulf.nih.gov 'cd {params.work_dir}; python /data/MoCha/patidarr/other/oncokb-annotator-1.0.3/ClinicalDataAnnotator.py -i {input.clinical} -o {output.clinical} -a {input.maf},{input.cnv}'
	#######################
	"""
