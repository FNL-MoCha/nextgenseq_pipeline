SUBJ_RSEM={}
if 'RNASeq' in config:
	for subject  in config['RNASeq'].keys():
		for sample in config['RNASeq'][subject]:
			if subject not in SUBJ_RSEM:
				SUBJ_RSEM[subject] =[subject+"/"+TIME+"/"+sample+"/RSEM/"+sample+".genes.results"]
			else:
				SUBJ_RSEM[subject] +=[subject+"/"+TIME+"/"+sample+"/RSEM/"+sample+".genes.results"]
				TARGET    +=  [subject+"/"+TIME+"/qc/"+subject+".RNASEQ_CoorelationHeatmap.pdf"]
############
# RSEM 
#############
rule rsem:
	input:
		R1 = "{base}/{TIME}/FQ/{sample}_R1.fastq.gz",
		R2 = "{base}/{TIME}/FQ/{sample}_R2.fastq.gz",
	output:
		"{base}/{TIME}/{sample}/RSEM/{sample}.isoforms.results",
		"{base}/{TIME}/{sample}/RSEM/{sample}.genes.results",
	version: config['rsem']
	params:
		rulename   ="rsem",
		batch      =config[config['host']]['job_RSEM'],
		script	   =NGS_PIPELINE+"/scripts/RSEM_renorm.R",
		index      =config["rsemIndex"],
		bowtie     =config["bowtie2"],
	shell: """
	#######################
	module load rsem/{version}
	module load bowtie/{params.bowtie}
	rsem-calculate-expression -p ${{THREADS}} --output-genome-bam --bowtie2 --forward-prob 0 --paired-end {input.R1} {input.R2} {params.index} ${{LOCAL}}/{wildcards.sample}
	module load R
	{params.script} ${{LOCAL}}/{wildcards.sample}.isoforms.results ${{LOCAL}}/{wildcards.sample}.genes.results {wildcards.base}/{wildcards.TIME}/{wildcards.sample}/RSEM/{wildcards.sample}.isoforms.results {wildcards.base}/{wildcards.TIME}/{wildcards.sample}/RSEM/{wildcards.sample}.genes.results
	#cp ${{LOCAL}}/{wildcards.sample}.genes.results {wildcards.base}/{wildcards.TIME}/{wildcards.sample}/RSEM/{wildcards.sample}.genes.results
	#cp ${{LOCAL}}/{wildcards.sample}.isoforms.results {wildcards.base}/{wildcards.TIME}/{wildcards.sample}/RSEM/{wildcards.sample}.isoforms.results
	#######################
	"""
############
# RSEM Coorelation Plot
############
rule rna_corr_plot:
	input:
		lambda wildcards: SUBJ_RSEM[wildcards.subject]
	output:
		"{subject}/{TIME}/qc/{subject}.RNASEQ_CoorelationHeatmap.pdf"
	params:
		rulename  ="rna_corr_plot",
		batch     =config[config['host']]['job_default'],
		script1	  =NGS_PIPELINE+"/scripts/assemble_RNASEQ_gene.py",
		script2   =NGS_PIPELINE+"/scripts/correlation_heatmap.R"
	shell: """
	#######################
	cp {input} ${{LOCAL}}
	python {params.script1} ${{LOCAL}} ${{LOCAL}}/{wildcards.subject}.csv
	module load R
	{params.script2} --input=${{LOCAL}}/{wildcards.subject}.csv --patient={wildcards.subject} --output={output}
	#######################
	"""
